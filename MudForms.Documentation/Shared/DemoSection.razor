@if (_file != null)
{
    <div class="mt-6 mb-12">
        @if (_file.Title != null)
        {
            <MudText Typo="Typo.h3">@_file.Title</MudText>
        }
        @if (_file.Description != null)
        {
            <MudText>@_file.Description</MudText>
        }
    </div>
    @if (_file.Html != null)
    {
        <div class="my-16">
            <MudText Typo="Typo.h5">
                <b>Example</b>
            </MudText>
            @ChildContent
        </div>
    }
    @if (_file.Code.Count > 0 || _file.Html?.Count > 0)
    {
        <div class="my-16">

            <MudText Typo="Typo.h5">
                <b>Source</b>
            </MudText>
            @if (_file.AdditionalCode?.Count > 0)
            {
                <MudText Class="mt-12">C#</MudText>
                <div class="code-wrapper">
                    <pre style="margin: 0"><code class="language-csharp">@string.Join(Environment.NewLine, _file.AdditionalCode)</code></pre>
                </div>
            }

            @if (_file.Html?.Count > 0)
            {
                <MudText Class="mt-12">Markup</MudText>
                <div class="code-wrapper">
                    <pre style="margin: 0"><code class="language-html">@string.Join(Environment.NewLine, _file.Html)</code></pre>
                </div>
            }
            @if (_file.Code.Count > 0)
            {
                <MudText Class="mt-12">C#</MudText>
                <div class="code-wrapper">
                    <pre style="margin: 0"><code class="language-csharp">@string.Join(Environment.NewLine, _file.Code)</code></pre>
                </div>
            }
            @if (_file.Scss?.Count > 0)
            {
                <MudText Class="mt-12" Color="Color.Error">Deprecated, remove Scss</MudText>
            }
        </div>
    }
}
else
{
    <MudText Color="Color.Error">File not found: @Path</MudText>
}

@code {

    [Parameter]
    public string Path { get; set; }

    [Parameter]
    public string AdditionalCs { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    private ParsedFile _file;

    protected override void OnInitialized()
    {
        _file = new ParsedFile(Path, AdditionalCs);
    }

}