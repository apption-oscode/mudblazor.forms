@namespace Elemental.Components
@using Microsoft.Extensions.Logging
@inherits HtmlElement
@inject IJSRuntime JSRuntime
@inject ILogger<AeSideNavItem> logger

<a class="@_sidenavItem" href="@(Link.To ?? Link?.ChildLinks.FirstOrDefault().To)" @onclick="NotifyInteropClick" @attributes="@InputAttributesWithoutClass">
    @if (Link.IconRender != null)
    {
        @Link.IconRender
    }
    else if (!string.IsNullOrEmpty(Link.IconName))
    {
        <AeIcon Icon="@Link.IconName" IconStyle="@Link.IconStyle" class="@($"{Link.Color}")"/>
    }
    <div class="sidenav-text">@Link.Label</div>                
</a>


@code {
    [Parameter]
    public AeNavLink Link { get; set; }

    [Parameter]
    public bool Main { get; set; }

    private string _sidenavItem => $"ae sidenav-item {(Main ? "main" : "")} {Link.Color}";
    private async Task NotifyInteropClick()
    {
        try
        {
            await JSRuntime.InvokeAsync<string>("sidenav.updateNav");
        } catch (Exception ex)
        {
            logger.LogWarning(ex, "Error updating AeSideNav");
        }
    }       
}
